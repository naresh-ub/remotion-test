import { IFederatedExtension } from '@jupyterlite/types';
import { ILicenseBundle, ILicenseBundles, ILicenseResponse, ILicenses } from './tokens';
/**
 * A JupyterLite implementation of the jupyterlab_server licenses route
 */
export declare class Licenses implements ILicenses {
    /**
     * A GET handler for the licenses
     */
    get(): Promise<ILicenseResponse>;
    /**
     * Get the app name (or default).
     */
    protected get appName(): string;
    /**
     * Get the well-known URL of the app licenses.
     */
    protected get appLicensesUrl(): string;
    /**
     * Get the lab extension base url.
     */
    protected get labExtensionsUrl(): string;
    /**
     * Resolve the licenses for the app distribution itself, or the empty bundle.
     */
    _getAppLicenses(): Promise<ILicenseBundle>;
    /**
     * Resolve the licenses for all federated extensions.
     */
    _getFederated(): Promise<ILicenseBundles>;
    /**
     * Update the bundles with the extension's licenses, or the empty bundle.
     */
    _getOneFederated(ext: IFederatedExtension, bundles: ILicenseBundles): Promise<void>;
}
