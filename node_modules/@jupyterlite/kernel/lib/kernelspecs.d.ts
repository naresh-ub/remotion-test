import { KernelSpec } from '@jupyterlab/services';
import { IKernel, IKernelSpecs } from './tokens';
/**
 * A class to handle requests to /api/kernelspecs
 */
export declare class KernelSpecs implements IKernelSpecs {
    /**
     * Get the kernel specs.
     */
    get specs(): KernelSpec.ISpecModels | null;
    /**
     * Get the default kernel name.
     */
    get defaultKernelName(): string;
    /**
     * Get the kernel factories for the current kernels.
     */
    get factories(): KernelSpecs.KernelFactories;
    /**
     * Register a new kernel.
     *
     * @param options The options to register a new kernel.
     */
    register(options: KernelSpecs.IKernelOptions): void;
    private _specs;
    private _factories;
}
/**
 * A namespace for KernelSpecs statics.
 */
export declare namespace KernelSpecs {
    /**
     * Registration options for a new kernel.
     */
    interface IKernelOptions {
        /**
         * The kernel spec.
         */
        spec: KernelSpec.ISpecModel;
        /**
         * The factory function to instantiate a new kernel.
         */
        create: KernelFactory;
    }
    /**
     * The type for a kernel factory function used to instantiate new kernels.
     */
    type KernelFactory = (options: IKernel.IOptions) => Promise<IKernel>;
    /**
     * The type for the record of kernel factory functions.
     */
    type KernelFactories = Map<string, KernelFactory>;
}
