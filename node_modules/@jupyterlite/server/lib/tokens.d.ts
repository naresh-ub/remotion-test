import { Token } from '@lumino/coreutils';
import { ISignal } from '@lumino/signaling';
/**
 * The token for the ServiceWorker.
 */
export declare const IServiceWorkerManager: Token<IServiceWorkerManager>;
/**
 * The interface for the ServiceWorkerRegistration.
 */
export interface IServiceWorkerManager {
    /**
     * Signal fired when the registration changed.
     */
    readonly registrationChanged: ISignal<IServiceWorkerManager, ServiceWorkerRegistration | null>;
    /**
     * Whether the ServiceWorker is enabled or not.
     */
    readonly enabled: boolean;
    /**
     * A Promise that resolves when the ServiceWorker is registered, or rejects if it cannot
     */
    ready: Promise<void>;
}
/**
 * A namespace for `ServiceWorkerManager` class.
 */
export declare namespace IServiceWorkerManager {
    /**
     * An options object for initializing a worker manager.
     */
    interface IOptions {
        /**
         * URL to load the worker file. Default to "{baseURL}/service-worker.js"
         */
        workerUrl?: string;
    }
}
export declare const WORKER_NAME: string;
